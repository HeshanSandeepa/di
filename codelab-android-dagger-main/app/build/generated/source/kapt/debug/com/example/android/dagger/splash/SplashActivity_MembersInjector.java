// Generated by Dagger (https://dagger.dev).
package com.example.android.dagger.splash;

import com.example.android.dagger.user.UserManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashActivity_MembersInjector implements MembersInjector<SplashActivity> {
  private final Provider<UserManager> userManagerProvider;

  private final Provider<SplashViewModel> splashViewModelProvider;

  public SplashActivity_MembersInjector(Provider<UserManager> userManagerProvider,
      Provider<SplashViewModel> splashViewModelProvider) {
    this.userManagerProvider = userManagerProvider;
    this.splashViewModelProvider = splashViewModelProvider;
  }

  public static MembersInjector<SplashActivity> create(Provider<UserManager> userManagerProvider,
      Provider<SplashViewModel> splashViewModelProvider) {
    return new SplashActivity_MembersInjector(userManagerProvider, splashViewModelProvider);
  }

  @Override
  public void injectMembers(SplashActivity instance) {
    injectUserManager(instance, userManagerProvider.get());
    injectSplashViewModel(instance, splashViewModelProvider.get());
  }

  @InjectedFieldSignature("com.example.android.dagger.splash.SplashActivity.userManager")
  public static void injectUserManager(SplashActivity instance, UserManager userManager) {
    instance.userManager = userManager;
  }

  @InjectedFieldSignature("com.example.android.dagger.splash.SplashActivity.splashViewModel")
  public static void injectSplashViewModel(SplashActivity instance,
      SplashViewModel splashViewModel) {
    instance.splashViewModel = splashViewModel;
  }
}
